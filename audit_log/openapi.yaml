openapi: 3.0.0
info:
  description: This API provides audit info
  version: "1.0.0"
  title: Audit API
  contact:
    email: tzamaev@my.bcit.ca
paths:
  /order:
    get:
      summary: gets a order reading from history
      operationId: app.get_order_reading
      description: Gets order readings from the event store
      parameters:
        - name: index
          in: query
          description: Gets the order at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a order event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
  /destination:
    get:
      summary: gets a destination reading from history
      operationId: app.get_destination_reading
      description: Gets destination reading from the event store
      parameters:
        - name: index
          in: query
          description: Gets the destination at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a destination event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Destination'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
components:
    schemas:
      Order:
        type: object
        required:
          - customer_id
          - ordr
          - timestamp
          - price
          - address
        properties:
          customer_id:
            type: string
            format: uuid
            example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
          ordr:
            type: string
            example: '1 burger, 1 coke'
          timestamp:
            type: string
            format: date-time
            example: '2020-10-29T09:09:22.001Z'
          price:
            type: number
            example: 11.30
          address:
            type: string
            example: '1516 Westwood st.'
      Destination:
        type: object
        required:
          - home_address
          - dest_address
          - num_passengers
        properties:
          home_address:
            type: string
            example: '1615 Alabama dr.'
          dest_address:
            type: string
            example: 'mcdonalds'
          num_passengers:
            type: number
            format: int
            example: 2
